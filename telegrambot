import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import ChatMemberUpdatedFilter, JOIN_TRANSITION
from aiogram.enums import ParseMode

# –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω
TOKEN = "YOUR_BOT_TOKEN_HERE"

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
new_users = set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@dp.chat_member(ChatMemberUpdatedFilter(member_status_changed=JOIN_TRANSITION))
async def new_chat_member(event: types.ChatMemberUpdated):
    new_users.add(event.new_chat_member.user.id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message(lambda message: message.chat.type == "private")
async def private_message_handler(message: Message):
    user_id = message.from_user.i
    text = message.text.lower()

    if "—Å–∫–∏–ø–∞—Å—Å" in text:
        await message.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∏–ø–∞—Å—Å–µ: 
                              ‚Ä¢ –¶–µ–Ω–∞ - 3500—Ä/—Å—É—Ç –æ—Ç 2 –¥–Ω–µ–π, 
                              ‚Ä¢ –ü–æ–¥—ä—ë–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –æ—Ç–º–µ—Ç–æ–∫ 940–º (¬´–í–æ–ª—á—å–µ–π –°–∫–∞–ª—ã¬ª) –∏–ª–∏ 1100–º (¬´–ë–µ—Ä–ª–æ–≥–∞¬ª). –î–æ —ç—Ç–∏—Ö –º–µ—Å—Ç –º–æ–∂–Ω–æ –¥–æ–±—Ä–∞—Ç—å—Å—è –Ω–∞ —Ç–∞–∫—Å–∏ –∏–ª–∏ –ª–∏—á–Ω–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞ –µ—Å—Ç—å —É —Å—Ç–∞–Ω—Ü–∏–∏ ¬´–í–æ–ª—á—å–µ–π –°–∫–∞–ª—ã¬ª
                              ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–¥—ä–µ–º–Ω–∏–∫–∞–º–∏ –û–ª–∏–º–ø–∏—è –∏ –°—Ç—Ä–µ–ª–∞ - –ù–ï–õ–¨–ó–Ø üö´ 
                              ‚Ä¢ –ù–∏–∫–æ–º—É –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–∫–∏–ø–∞—Å—Å
                              ‚Ä¢ –ù–∞–¥–µ–≤–∞—Ç—å —à–ª–µ–º, –º–∞—Å–∫—É –∏ –±–∞–ª–∞–∫–ª–∞–≤—É, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –ª–∏—Ü–æ")
        return
    if "—Å–∫–∏–ø" in text:
        await message.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∏–ø–∞—Å—Å–µ: 
                              ‚Ä¢ –¶–µ–Ω–∞ - 3500—Ä/—Å—É—Ç –æ—Ç 2 –¥–Ω–µ–π, 
                              ‚Ä¢ –ü–æ–¥—ä—ë–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –æ—Ç–º–µ—Ç–æ–∫ 940–º (¬´–í–æ–ª—á—å–µ–π –°–∫–∞–ª—ã¬ª) –∏–ª–∏ 1100–º (¬´–ë–µ—Ä–ª–æ–≥–∞¬ª). –î–æ —ç—Ç–∏—Ö –º–µ—Å—Ç –º–æ–∂–Ω–æ –¥–æ–±—Ä–∞—Ç—å—Å—è –Ω–∞ —Ç–∞–∫—Å–∏ –∏–ª–∏ –ª–∏—á–Ω–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞ –µ—Å—Ç—å —É —Å—Ç–∞–Ω—Ü–∏–∏ ¬´–í–æ–ª—á—å–µ–π –°–∫–∞–ª—ã¬ª
                              ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–¥—ä–µ–º–Ω–∏–∫–∞–º–∏ –û–ª–∏–º–ø–∏—è –∏ –°—Ç—Ä–µ–ª–∞ - –ù–ï–õ–¨–ó–Ø üö´ 
                              ‚Ä¢ –ù–∏–∫–æ–º—É –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–∫–∏–ø–∞—Å—Å
                              ‚Ä¢ –ù–∞–¥–µ–≤–∞—Ç—å —à–ª–µ–º, –º–∞—Å–∫—É –∏ –±–∞–ª–∞–∫–ª–∞–≤—É, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –ª–∏—Ü–æ")
        return

    if user_id in new_users:
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?")
        new_users.remove(user_id)
    else:
        await message.answer("–Ø –ø–æ–ª—É—á–∏–ª —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
